{"ast":null,"code":"import { API_BASE_URL } from '../constants/constants';\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch budget');\n  }\n  let budget = response.json().then(jsonResponse => {\n    console.log(\"data in fetchBudget\", jsonResponse);\n    return jsonResponse.data;\n  });\n  return budget;\n};\n\n// Function to update the budget in the backend. Method: PUT\nexport const updateBudget = async budget => {\n  const response = await fetch(`${API_BASE_URL}/budget`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(\"amount:\" + budget)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update budget\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","budget","json","then","jsonResponse","console","log","data","updateBudget","method","headers","body","JSON","stringify"],"sources":["C:/Users/sarba/Documents/CSE110/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from '../constants/constants';\r\nimport { Expense } from \"../types/types\";\r\n\r\n// Function to get budget from the backend. Method: GET\r\nexport const fetchBudget = async (): Promise<number> => {\r\n    const response = await fetch(`${API_BASE_URL}/budget`);\r\n\r\n\tif (!response.ok) {\r\n    \tthrow new Error('Failed to fetch budget');\r\n\t}\r\n\r\n\tlet budget = response.json().then((jsonResponse) => {\r\n    \tconsole.log(\"data in fetchBudget\", jsonResponse);\r\n    \treturn jsonResponse.data;\r\n\t});\r\n\r\n    return budget;\r\n};\r\n\r\n// Function to update the budget in the backend. Method: PUT\r\nexport const updateBudget = async (budget: number): Promise<number> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/budget`, {\r\n    \tmethod: \"POST\",\r\n    \theaders: {\r\n        \t\"Content-Type\": \"application/json\",\r\n    \t},\r\n    \tbody: JSON.stringify(\"amount:\" + budget),\r\n\t});\r\n\tif (!response.ok) {\r\n    \tthrow new Error(\"Failed to update budget\");\r\n\t}\r\n\treturn response.json();\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AAGrD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EAEzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EAEA,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,YAAY,IAAK;IAChDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,YAAY,CAAC;IAChD,OAAOA,YAAY,CAACG,IAAI;EAC5B,CAAC,CAAC;EAEC,OAAON,MAAM;AACjB,CAAC;;AAED;AACA,OAAO,MAAMO,YAAY,GAAG,MAAOP,MAAc,IAAsB;EACtE,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IACnDc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,SAAS,GAAGZ,MAAM;EAC3C,CAAC,CAAC;EACF,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;EACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}